pipeline {

    agent none

    stages {
                         
stage('Deploy to GKE') {        
             agent {
                docker { 
                    image 'google/cloud-sdk:latest' 
                }
                
            }
            environment {
                CLOUDSDK_CONFIG="/tmp"
                KUBECONFIG="~/.kube"
            }
             steps {
                  script {
                            def props = readProperties file: 'devops/dev.env'
                            env.APP = props.APP
                            env.APP_MODULE = props.APP_MODULE
                            env.DOCKER_REPOSITORY= props.DOCKER_REPOSITORY
                            
                            env.PROJECT_ID = props.PROJECT_ID
                            env.CLUSTER_NAME = props.CLUSTER_NAME
                            env.LOCATION = props.LOCATION
                            env.CREDENTIALS_ID = props.CREDENTIALS_ID
                        }

                withCredentials([[$class: 'FileBinding', credentialsId: env.CREDENTIALS_ID, variable: 'GOOGLE_APPLICATION_CREDENTIALS']]) {
                    sh 'echo "${GOOGLE_APPLICATION_CREDENTIALS}"' // returns ****
                    sh 'gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS'
                    sh 'gcloud container clusters get-credentials $CLUSTER_NAME --zone $LOCATION --project $PROJECT_ID'
                    sh 'kubectl set image deployment/clientes-ronald-rojas lab01=$DOCKER_REPOSITORY/$APP-$APP_MODULE:${BUILD_NUMBER}'
                }
            }

        }                

        
    }
}
